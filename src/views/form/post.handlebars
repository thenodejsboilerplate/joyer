{{#extend 'css'}}
<link rel="stylesheet" type="text/css" href="/pell/dist/pell.min.css">
  <style>
    /* override styles here */
    .pell-content {
      background-color: pink;
    }
/* After pell styles are applied to DOM: */
.pell-content {
  height: 400px;
}

  </style>
{{/extend}}
<form method="post" action="/post/post">
  <label>
  
  Title：<br />
  <input type="text" name="title" placeholder="title"/>
  </label><br />

   <label>
  Tags：<br />
  <input type="text" name="tags" placeholder="use ',' to seperate between tags"/>
  </label> <br />

   <label>
  Category：<br />
  <select name="category">
    <option selected>Category 1</option>
    <option>Category 2</option>
    <option>Category 3</option>
    <option>Category 4</option>
  </select>
  </label> <br />

   <label>
  Introduction：<br />
  <input type="text" name="intro" placeholder="The introduction about the post, less than 200 words!"/>
  </label> <br />


  <label>
  Content：<br />

  <textarea name="content" rows="20" cols="100" placeholder="Content" id="pell" ></textarea><br />
  </label>
   

  <input type="submit" value="POST" />
</form>



<div id="pell" style="width:500px; height: 500px;"></div>
<div>
  Text output:
  <div id="text-output"></div>
  HTML output:
  <pre id="html-output"></pre>
</div>


{{#extend "js"}}
	{{!--<script src="/ckeditor/ckeditor.js"></script>
	<script src="/js/editor/editor.js"></script>  --}}
  <script src="/pell/dist/pell.min.js"></script>    
  <script>
	//initSample();
// Initialize pell on an HTMLElement
var editor = pell.init({
  element: document.getElementById('pell'),
  onChange: html => {
    document.getElementById('text-output').innerHTML = html
    document.getElementById('html-output').textContent = html
  },
  styleWithCSS: true,
  actions: [
    'bold',
    'underline',
    {
      name: 'italic',
      result: () => window.pell.exec('italic')
    },
    {
      name: 'custom',
      icon: '<b><u><i>C</i></u></b>',
      title: 'Custom Action',
      result: () => console.log('YOLO')
    },
    {
      name: 'image',
      result: () => {
        const url = window.prompt('Enter the image URL')
        if (url) window.pell.exec('insertImage', ensureHTTP(url))
      }
    },
    {
      name: 'link',
      result: () => {
        const url = window.prompt('Enter the link URL')
        if (url) window.pell.exec('createLink', ensureHTTP(url))
      }
    }
  ],
  classes: {
    actionbar: 'pell-actionbar-custom-name',
    button: 'pell-button-custom-name',
    content: 'pell-content-custom-name'
  }
})

// editor.content<HTMLElement>
// To change the editor's content:
editor.content.innerHTML = '<b><u><i>Initial content!</i></u></b>'

  </script>
{{/extend}}